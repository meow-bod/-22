-- 1. Create messages table
CREATE TABLE public.messages (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ WITH TIME ZONE DEFAULT NOW() NOT NULL,
  match_id BIGINT REFERENCES public.matches(id) ON DELETE CASCADE NOT NULL,
  sender_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  content TEXT NOT NULL
);

-- 2. Enable RLS for the messages table
ALTER TABLE public.messages ENABLE ROW LEVEL SECURITY;

-- 3. Create RLS policies for messages
-- Users can insert messages in a match they are part of
CREATE POLICY "Users can insert messages in their matches" ON public.messages
  FOR INSERT
  WITH CHECK (
    auth.uid() = sender_id AND
    auth.uid() IN (
      SELECT owner_id FROM public.pets WHERE id = (SELECT pet1_id FROM public.matches WHERE id = match_id)
      UNION ALL
      SELECT owner_id FROM public.pets WHERE id = (SELECT pet2_id FROM public.matches WHERE id = match_id)
    )
  );

-- Users can see messages in a match they are part of
CREATE POLICY "Users can view messages in their matches" ON public.messages
  FOR SELECT
  USING (
    auth.uid() IN (
      SELECT owner_id FROM public.pets WHERE id = (SELECT pet1_id FROM public.matches WHERE id = match_id)
      UNION ALL
      SELECT owner_id FROM public.pets WHERE id = (SELECT pet2_id FROM public.matches WHERE id = match_id)
    )
  );

-- 4. Set up real-time functionality for the messages table
-- This requires enabling replication on the table
ALTER TABLE public.messages REPLICA IDENTITY FULL;

-- Then, create a publication that includes the messages table
-- Note: Supabase might handle this automatically, but explicitly creating it ensures it's set up.
-- Check your Supabase project settings to see if you need to create this manually.
CREATE PUBLICATION supabase_realtime FOR TABLE public.messages;